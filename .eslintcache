[{"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/index.js":"1","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/reportWebVitals.js":"2","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/App.js":"3","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Checkout/Checkout.js":"4","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/SignUp/SignUp.js":"5","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Checkout/PaymentForm.js":"6","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Checkout/AddressForm.js":"7","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/NavBar/NavBar.js":"8","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Checkout/Review.js":"9","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Landing/Landing.js":"10","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/SignIn/SignIn.js":"11","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/Admin.js":"12","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/Dashboard.js":"13","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/AdminNavBar.js":"14","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/AddCar.js":"15","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/DragDrop.js":"16","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/Inventory.js":"17","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/SpecificCar.js":"18","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/Orders.js":"19"},{"size":589,"mtime":1613460836512,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1613287395117,"results":"22","hashOfConfig":"21"},{"size":1303,"mtime":1614547992734,"results":"23","hashOfConfig":"21"},{"size":8735,"mtime":1614578360308,"results":"24","hashOfConfig":"21"},{"size":4156,"mtime":1613287395116,"results":"25","hashOfConfig":"21"},{"size":4155,"mtime":1614577824977,"results":"26","hashOfConfig":"21"},{"size":1468,"mtime":1614559336889,"results":"27","hashOfConfig":"21"},{"size":1364,"mtime":1614577892324,"results":"28","hashOfConfig":"21"},{"size":2934,"mtime":1613287395115,"results":"29","hashOfConfig":"21"},{"size":21680,"mtime":1614574827718,"results":"30","hashOfConfig":"21"},{"size":3152,"mtime":1613287395116,"results":"31","hashOfConfig":"21"},{"size":4545,"mtime":1614578320811,"results":"32","hashOfConfig":"21"},{"size":6978,"mtime":1614439780709,"results":"33","hashOfConfig":"21"},{"size":2511,"mtime":1614439723007,"results":"34","hashOfConfig":"21"},{"size":5543,"mtime":1614575496808,"results":"35","hashOfConfig":"21"},{"size":3572,"mtime":1614575496809,"results":"36","hashOfConfig":"21"},{"size":11432,"mtime":1613521040351,"results":"37","hashOfConfig":"21"},{"size":16227,"mtime":1614575471637,"results":"38","hashOfConfig":"21"},{"size":2822,"mtime":1614439926699,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1pipo71",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/index.js",[],["85","86"],"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/reportWebVitals.js",[],"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/App.js",[],"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Checkout/Checkout.js",["87","88","89","90","91"],"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/SignUp/SignUp.js",[],"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Checkout/PaymentForm.js",[],"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Checkout/AddressForm.js",["92","93","94","95","96","97"],"import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nfunction AddressForm(props) {\n  const [car, setCar] = React.useState()\n  var getCars = () => {\n    fetch(`http://localhost:8080/cars/${props.id}`, {\n            method: 'get',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            }\n        }).then(res => res.json())\n        .then(res => {\n            console.log(res)\n            setCar(res)\n        })\n        .catch(err => console.log(err))\n}\nReact.useEffect(() => {\n  getCars()\n}, []);\n\n  return (\n    <React.Fragment>\n      {\n      car !== undefined?\n      <div style={{width:\"100%\", height:\"auto\", display:\"flex\",flexDirection:\"column\"}}>\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n        {car.year} {car.make} {car.model}\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n          ${car.price.$numberDecimal}\n        </Typography>\n        <img style={{width:\"100%\", height:\"auto\"}} src={car.imgs[0]}></img>\n      </div>\n      \n      :\n      \"\"\n      }\n    </React.Fragment>\n  );\n}\n\nexport default AddressForm;","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/NavBar/NavBar.js",["98"],"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Checkout/Review.js",[],"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Landing/Landing.js",["99","100","101","102","103","104","105","106"],"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/SignIn/SignIn.js",[],"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/Admin.js",["107","108","109"],"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/Dashboard.js",["110","111","112","113"],"import React, {\n  useState\n} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport AdminNavBar from './AdminNavBar'\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chart from \"react-apexcharts\";\nimport './styles.css';\n\nfunction Dashboard() {\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n  const classes = useStyles();\n  // const [errorMessage, setErrorMessage] = useState(\"\")\n  // const [carYear, setCarYear] = useState(\"\")\n    const history = useHistory();\n\n\n// var SubmitLogin = (e) => {\n//   e.preventDefault()\n//   setErrorMessage(\"\")\n//   console.log(e.target.email.value)\n//   console.log(e.target.password.value)\n//   submiter(e.target.email.value, e.target.password.value).then(res=>res.message==\"Success\"?history.push(\"/admin-dash\"):setErrorMessage(\"Login Failed\"))\n  \n\n//   fetch(`http://localhost:8080/cars/admin`, {\n//     method: 'post',\n//     body:\n//       JSON.stringify({\"username\":e.target.email.value,\n//       \"pw\":e.target.password.value}),\n//     headers: {\n//         'Accept': 'application/json, text/plain, */*',\n//         'Content-Type': 'application/json'\n//     },\n//     credentials: 'same-origin'}).then(res => console.log(res))\n// .then(res => console.log(res))\n// .catch(err => console.log(err))\n// }\n// var submiter = (username,pw) => {\n//   const fetchData = async () => {\n//     const result = await fetch(`http://localhost:8080/cars/admin`, {\n//       headers: {\n//         Accept: 'application/json, text/plain, */*',\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({\"username\":username,\n//       \"pw\":pw}),\n//       method: \"POST\", credentials: 'same-origin'\n//     });\n//     let response = await result.json();\n//     return response\n//   }\n//   return fetchData()\n// } \nvar lineData = {\n  series: [{\n    name: \"Session Duration\",\n    data: [45, 52, 38, 24, 33, 26, 21, 20, 6, 8, 15, 10]\n  },\n  {\n    name: \"Page Views\",\n    data: [35, 41, 62, 42, 13, 18, 29, 37, 36, 51, 32, 35]\n  },\n  {\n    name: 'Total Visits',\n    data: [87, 57, 74, 99, 75, 38, 62, 47, 82, 56, 45, 47]\n  }\n],\noptions: {\n  chart: {\n    height: 350,\n    type: 'line',\n    zoom: {\n      enabled: false\n    },\n  },\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    width: [5, 7, 5],\n    curve: 'straight',\n    dashArray: [0, 8, 5]\n  },\n  title: {\n    text: 'Page Statistics',\n    align: 'left'\n  },\n  legend: {\n    tooltipHoverFormatter: function(val, opts) {\n      return val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\n    }\n  },\n  markers: {\n    size: 0,\n    hover: {\n      sizeOffset: 6\n    }\n  },\n  xaxis: {\n    categories: ['01 Jan', '02 Jan', '03 Jan', '04 Jan', '05 Jan', '06 Jan', '07 Jan', '08 Jan', '09 Jan',\n      '10 Jan', '11 Jan', '12 Jan'\n    ],\n  },\n  tooltip: {\n    y: [\n      {\n        title: {\n          formatter: function (val) {\n            return val + \" (mins)\"\n          }\n        }\n      },\n      {\n        title: {\n          formatter: function (val) {\n            return val + \" per session\"\n          }\n        }\n      },\n      {\n        title: {\n          formatter: function (val) {\n            return val;\n          }\n        }\n      }\n    ]\n  },\n  grid: {\n    borderColor: '#f1f1f1',\n  }\n},\n\n\n};\n\nvar barData = {\n  options: {\n    chart: {\n      id: \"basic-bar\"\n    },\n    xaxis: {\n      categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998]\n    }\n  },\n  series: [\n    {\n      name: \"series-1\",\n      data: [30, 40, 45, 50, 49, 60, 70, 91]\n    }\n  ]\n};\n  var pieData = {\n  options: {},\n  series: [44, 55, 41, 17, 15],\n  labels: ['A', 'B', 'C', 'D', 'E']\n}\nfunction generateData(count, yrange) {\n  var i = 0;\n  var series = [];\n  while (i < count) {\n    var x = \"w\" + (i + 1).toString();\n    var y =\n      Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n    series.push({\n      x: x,\n      y: y\n    });\n    i++;\n  }\n  return series;\n}\n\nvar heatMapOptions = {\n  series: [\n    {\n      name: \"Metric1\",\n      data: generateData(18, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: \"Metric2\",\n      data: generateData(18, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: \"Metric3\",\n      data: generateData(18, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: \"Metric4\",\n      data: generateData(18, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: \"Metric5\",\n      data: generateData(18, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: \"Metric6\",\n      data: generateData(18, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: \"Metric7\",\n      data: generateData(18, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: \"Metric8\",\n      data: generateData(18, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: \"Metric9\",\n      data: generateData(18, {\n        min: 0,\n        max: 90\n      })\n    }\n  ],\n  chart: {\n    height: 350,\n    type: \"heatmap\"\n  },\n  plotOptions: {\n     heatmap: {\n       radius: 0\n     }\n  },\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    width: 0\n  },\n  colors: [\"#008FFB\"]\n};\n  return (\n<div>\n   <AdminNavBar value={4}/>\n   \n   <div style={{display:\"flex\",marginLeft: \"180px\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",width:\"80vw\"}}>\n      <CssBaseline />\n        <div style={{display:\"flex\", flexDirection: \"row\", flexWrap: \"wrap\",width:\"100%\",marginTop:\"20px\"}}>\n        <div className=\"charts\">\n        <Chart \n        options={lineData.options} \n        series={lineData.series} \n        type=\"line\" height={350} \n        width={500} \n        />\n        </div>\n        <div className=\"charts\">\n        <Chart\n        options={barData.options}\n        series={barData.series}\n        type=\"bar\"\n        height={350}\n        width={500}\n        />\n        </div>\n        </div>\n        <div style={{display:\"flex\", flexDirection: \"row\", flexWrap: \"wrap\",width:\"100%\",marginBottom:\"20px\"}}>\n        <div className=\"charts\">\n        <Chart \n        options={heatMapOptions.plotOptions} \n        series={heatMapOptions.series} \n        type=\"heatmap\" \n        height={350} \n        width={500}\n        />\n        </div>\n        <div className=\"charts\">\n        <Chart \n        options={pieData.options} \n        series={pieData.series} \n        type=\"donut\" \n        height={350} \n        width={500}\n        />\n        </div>\n        </div>\n   </div>\n   \n</div>\n  );\n}\n\nexport default Dashboard;","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/AdminNavBar.js",["114"],"import React from 'react';\nimport AppBar from '@material-ui/core/AppBar'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/PersonSharp';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {/* {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'} */}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nlet AdminNavBar = (props) => {\n  const classes = useStyles();\n  return (\n      <AppBar position=\"\"         \n      style={{\n        width:\"162px\",\n        height:\"100vh\",\n        position:\"fixed\"\n        }}>\n        <Tabs orientation=\"vertical\" value={props.value}>\n          <div style={{        \n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            margin: \"auto\",\n            height: \"100px\",\n            width: \"100%\"\n            }}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n          </div>\n        <Tab value={0} label='Home'  to='/' component={Link} /> \n        <Tab value={1} label='Inventory'  to='/admin-inventory' component={Link} /> \n        <Tab value={2} label='Add Car'  to='/admin-add' component={Link} /> \n        <Tab value={3} label='Orders'  to='/admin-orders' component={Link} /> \n        <Tab value={4} label='Analytics'  to='/admin-dash' component={Link} /> \n        <Tab value={5} label='Log Out'  to='/admin-portal' component={Link} /> \n        </Tabs>\n      </AppBar>\n  );\n}\nexport default AdminNavBar;","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/AddCar.js",["115"],"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/DragDrop.js",["116"],"import React, { useState } from 'react';\nimport './styles.css';\n\n\nconst DropArea = (props,id) => {\n  const [data, setData] = useState(false);\n  const [imageUpload, setImageUpload] = useState('');\n  const [imageName, setImageName] = useState('');\n  const [imageTask, setImageTask] = useState('');\n  const [imageDone, setImageDone] = useState('');\n  const renderImage = () => {\n    if (imageUpload===''){\n      return(\n        <span className=\"download-arrow\">\n        <svg height = \"50px\" width = \"50px\">\n          <path className=\"download-color\" d=\"M48.4 26.5c-.9 0-1.7.7-1.7 1.7v11.6h-43.3v-11.6c0-.9-.7-1.7-1.7-1.7s-1.7.7-1.7 1.7v13.2c0 .9.7 1.7 1.7 1.7h46.7c.9 0 1.7-.7 1.7-1.7v-13.2c0-1-.7-1.7-1.7-1.7zm-24.5 6.1c.3.3.8.5 1.2.5.4 0 .9-.2 1.2-.5l10-11.6c.7-.7.7-1.7 0-2.4s-1.7-.7-2.4 0l-7.1 8.3v-25.3c0-.9-.7-1.7-1.7-1.7s-1.7.7-1.7 1.7v25.3l-7.1-8.3c-.7-.7-1.7-.7-2.4 0s-.7 1.7 0 2.4l10 11.6z\"></path>\n        </svg>\n      </span>\n\n      )\n\n    }\n    if (imageUpload==='loading'){\n      return(\n        <div id=\"preloader\">\n          <div id=\"loader\"></div>\n        </div>\n      )\n    }\n  }\n  const renderImageInfo = () => {\n    \n    if (imageTask === ''){\n      return \"\"\n    }\n    \n    return(\n      <div>\n        <p>Name: {imageName}</p>\n        <p>{imageDone}</p>\n      </div>\n    )\n  }\n  const onDrop = e => {\n    e.preventDefault();\n    setImageName('')\n    setImageTask('')\n    setImageUpload('loading')\n    let i\n    const sleep = (milliseconds) => {\n      return new Promise(resolve => setTimeout(resolve, milliseconds))\n    }\n    sleep(500).then(() => {\n      console.log(\"waiting\"); \n      \n    })\n    \n    for(i in e.dataTransfer.files){\n      if (typeof(e.dataTransfer.files[i]) === \"object\" ){\n      console.log(e.dataTransfer.files[i])\n\n      // Create an object of formData \n      const formData = new FormData(); \n\n      // Update the formData object \n      formData.append( \n        \"upload_data\", \n        e.dataTransfer.files[i]\n      ); \n      // Details of the uploaded file \n      setImageName((e.dataTransfer.files[i].name)); \n        console.log(id)\n        console.log(\"PROPS \",props.id)\n         const uploadFile = (formData)  => {\n            const fetchData = async () => {\n              const result = await fetch(`http://localhost:8080/cars/upload_photo?id=${props.id}&name=${e.dataTransfer.files[i].name}`, {\n                headers: {\n                  Accept: 'application/json'\n                },body: formData, method: \"POST\", credentials: 'same-origin'\n              });\n              let response = await result.json();\n              setImageTask(response)\n              await sleep(2000)\n              setImageUpload('')\n              setImageDone('Upload Complete')\n              props.sendData(\"upload complete\")\n              return response\n            }\n            return fetchData()\n          }\n          // hard coding dataset_id for now until I get formData to work\n          \n          uploadFile(formData)\n          \n      } else {\n        return \"Choose a dataset\"\n      }\n    }\n  };\n\n  const onDragOver = e => {\n    e.preventDefault();\n  };\n\n  return (\n    <div>\n      <div\n      className=\"drag-container\"\n        onDrop={e => onDrop(e)}\n        onDragOver={e => onDragOver(e)}\n      >\n        {renderImage()}\n\n\n        {/* {data && <img style={dropAreaImageStyle} src={data} />} */}\n      </div>\n      <br />\n      <div className=\"button-wrapper\">\n        {data && <button text=\"Remove\" onClick={() => setData(false)}></button>}\n      </div>\n      {renderImageInfo()}\n    </div>\n  );\n};\n\n\nexport default DropArea;","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/Inventory.js",["117","118","119","120","121","122","123","124","125","126","127","128","129","130"],"import React, {\n    useEffect,\n    useState\n  } from 'react';\n  import AppBar from '@material-ui/core/AppBar';\n  import Button from '@material-ui/core/Button';\n  import Card from '@material-ui/core/Card';\n  import CardActions from '@material-ui/core/CardActions';\n  import CardContent from '@material-ui/core/CardContent';\n  import CardMedia from '@material-ui/core/CardMedia';\n  import Grid from '@material-ui/core/Grid';\n  import Toolbar from '@material-ui/core/Toolbar';\n  import Typography from '@material-ui/core/Typography';\n  import { makeStyles } from '@material-ui/core/styles';\n  import Container from '@material-ui/core/Container';\n  import AdminNavBar from './AdminNavBar'\n  import { Link } from 'react-router-dom'\n  import Pagination from '@material-ui/lab/Pagination';\n  import Dialog from '@material-ui/core/Dialog';\n  import IconButton from '@material-ui/core/IconButton';\n  import CloseIcon from '@material-ui/icons/Close';\n  import Slide from '@material-ui/core/Slide';\n  import InputLabel from '@material-ui/core/InputLabel';\n  import MenuItem from '@material-ui/core/MenuItem';\n  import FormControl from '@material-ui/core/FormControl';\n  import Select from '@material-ui/core/Select';\n  \n  \n  const useStyles = makeStyles((theme) => ({\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6),\n    },\n  }));\n  \n  \n  const Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction = \"up\"\n    ref = {\n        ref\n    } {\n        ...props\n    }\n    />;\n  });\n  \n  let Inventory = () => {\n    const [cars, setCars] = useState([])\n    const [listing, setListing] = useState(\"\")\n    const [totalPages, setTotalPages] = useState(1)\n    const [carImageNum, setCarImageNum] = useState(1)\n    const [page, setPage] = useState(1)\n    const [resultMessage, setResultMessage] = useState(\"\")\n    const [carYear, setCarYear] = useState(\"\")\n    const [pageLimit, setPageLimit] = useState(10)\n    const [carColor, setCarColor] = useState(\"\")\n    const [open, setOpen] = useState(false);\n  \n    const handleClickOpen = (item) => {\n     setCarImageNum(1)\n     setOpen(true)\n    };\n    var createListing = (item) => {\n  \n    }\n    const handleClose = () => {\n        setCarImageNum(1)\n        setOpen(false);\n    };\n    var pics = [\n     {\n         name: \"Random Name #1\",\n         description: \"Probably the most random thing you have ever seen!\"\n     },\n     {\n         name: \"Random Name #2\",\n         description: \"Hello World!\"\n     }\n  ]\n    var getCars = () => {\n        fetch(`http://localhost:8080/cars/?page=${page}&limit=${pageLimit}&color=${carColor}&year=${carYear}`, {\n                method: 'get',\n                headers: {\n                    'Accept': 'application/json, text/plain, */*',\n                    'Content-Type': 'application/json'\n                }\n            }).then(res => res.json())\n            .then(res => {\n                console.log(res)\n                setResultMessage(res.results)\n                setCars(res.results.data)\n                setListing(cars[0])\n                setTotalPages(res.results.count)\n            })\n            .catch(err => console.log(err))\n  \n  \n    }\n    \n    const classes = useStyles();\n  \n    const pageLimitChange = (event) => {\n        setPageLimit(event.target.value);\n    }\n    const carColorChange = (event) => {\n        setCarColor(event.target.value);\n    }\n    const carYearChange = (event) => {\n        setCarYear(event.target.value);\n    }\n  \n    useEffect(() => {\n      getCars()\n    }, [page, pageLimit, carColor, carYear]);\n  \n    return (\n  <React.Fragment>\n     <AdminNavBar value={1}/>\n     <main>\n        <div style={{display:\"flex\",justifyContent:\"space-evenly\", alignItems:\"center\", marginLeft:\"180px\",paddingTop:\"25px\"}}>\n        <FormControl variant=\"outlined\" className={classes.formControl} style={{width:\"100px\"}}>\n           <InputLabel id=\"demo-simple-select-outlined-label\">Page Limit</InputLabel>\n           <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={pageLimit}\n              onChange={pageLimitChange}\n              label=\"Page Limit\"\n              >\n              <MenuItem value={1}>1</MenuItem>\n              <MenuItem value={10}>10</MenuItem>\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={75}>75</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n           </Select>\n        </FormControl>\n        <FormControl variant=\"outlined\" className={classes.formControl} style={{width:\"100px\"}}>\n           <InputLabel id=\"demo-simple-select-outlined-label\">Color</InputLabel>\n           <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={carColor}\n              onChange={carColorChange}\n              label=\"Car Color\"\n              >\n              <MenuItem value={\"\"}>Any</MenuItem>\n              <MenuItem value={\"Blue\"}>Blue</MenuItem>\n              <MenuItem value={\"Black\"}>Black</MenuItem>\n              <MenuItem value={\"Red\"}>Red</MenuItem>\n              <MenuItem value={\"Yellow\"}>Yellow</MenuItem>\n              <MenuItem value={\"Green\"}>Green</MenuItem>\n              <MenuItem value={\"Green\"}>Green</MenuItem>\n           </Select>\n        </FormControl>\n        <FormControl variant=\"outlined\" className={classes.formControl} style={{width:\"100px\"}}>\n           <InputLabel id=\"demo-simple-select-outlined-label\">Year</InputLabel>\n           <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={carYear}\n              onChange={carYearChange}\n              label=\"Car Year\"\n              >\n              <MenuItem value={\"\"}>Any</MenuItem>\n              <MenuItem value={2020}>2020</MenuItem>\n              <MenuItem value={2019}>2019</MenuItem>\n              <MenuItem value={2018}>2018</MenuItem>\n              <MenuItem value={2017}>2017</MenuItem>\n              <MenuItem value={2016}>2016</MenuItem>\n              <MenuItem value={2015}>2015</MenuItem>\n              <MenuItem value={2014}>2014</MenuItem>\n              <MenuItem value={2013}>2013</MenuItem>\n              <MenuItem value={2012}>2012</MenuItem>\n              <MenuItem value={2011}>2011</MenuItem>\n              <MenuItem value={2010}>2010</MenuItem>\n              <MenuItem value={2009}>2009</MenuItem>\n              <MenuItem value={2008}>2008</MenuItem>\n              <MenuItem value={2007}>2007</MenuItem>\n              <MenuItem value={2006}>2006</MenuItem>\n              <MenuItem value={2005}>2005</MenuItem>\n              <MenuItem value={2004}>2004</MenuItem>\n              <MenuItem value={2003}>2003</MenuItem>\n           </Select>\n        </FormControl>\n        </div>\n        {/* make */}\n        {/* model\n        color\n        year\n        drivetrain\n        transmission\n        fuelType\n        vin */}\n        {\n        resultMessage === undefined || cars === undefined?\n        <div>\n           <br></br>\n           <br></br>\n           <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{display:\"flex\", justifyContent:\"center\"}}>\n           No Matches Found\n           </Typography>\n           <br></br>\n           <br></br>\n        </div>\n        :\n        <Container className={classes.cardGrid} maxWidth=\"md\" style={{marginLeft:\"180px\"}}>\n           {/* End hero unit */}\n           <Grid container spacing={4}>\n              {cars.map((item,index) => (\n              <Grid item key={index} xs={12} sm={6} md={4}>\n                 <Card className={classes.card}>\n                    <CardMedia\n                       className={classes.cardMedia}\n                       image={item.imgs[0]}\n                       title=\"Image title\"\n                       />\n                    <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {item.year} {item.make} {item.model}\n                     </Typography>\n                     <Typography>\n                        {item.sold === false?\"Available\":\"Sold\"}\n                     </Typography>\n                     <Typography>\n                        Color: {item.color}\n                     </Typography>\n                     <Typography>\n                        description: {item.description}          \n                     </Typography>\n                     <Typography>\n                        drivetrain: {item.drivetrain}\n                     </Typography>\n                     {/* <Typography>\n                        Features: {item.features.map((feature,featureIndex) => \n                        <span key={featureIndex}>\n                        <br></br>\n                        --{feature}\n                        </span>)\n                        }\n                     </Typography> */}\n                     <Typography>\n                        city mpg: {item.mpg.city}\n                     </Typography>\n                     <Typography>\n                        highway mpg: {item.mpg.highway}\n                     </Typography>\n                     <Typography>\n                        price: {item.price.$numberDecimal}\n                     </Typography>\n                     {/* <Typography>\n                        transmission: {item.transmission}\n                     </Typography>\n                     <Typography>\n                        fuelType: {item.fuelType}\n                     </Typography>\n                     <Typography>\n                        engine: {item.engine}\n                     </Typography> */}\n                    </CardContent>\n                    <CardActions>\n                    <Link autoFocus color=\"\" to={{\n                              pathname: \"/admin-specific-car\",\n                              search: `?id=${item._id}`,}}>\n                       <Button variant=\"outlined\" color=\"primary\" >\n                       View\n                       </Button>\n                       </Link>\n                    </CardActions>\n                 </Card>\n              </Grid>\n              ))}\n           </Grid>\n        </Container>\n        }\n        {\n        totalPages === 1?\n        <div style={{display:\"flex\", justifyContent:\"center\"}}>\n        <Pagination count={1} page={page} onChange={(event,val)=>\n        setPage(val)} co  lor=\"primary\" showFirstButton showLastButton/>\n        </div>\n        :\n        <div style={{display:\"flex\", justifyContent:\"center\"}}>\n        <Pagination count={Math.ceil(totalPages/pageLimit)} page={page} onChange={(event,val)=>\n        setPage(val)} color=\"primary\" showFirstButton showLastButton/>\n        </div>\n        }\n     </main>\n  </React.Fragment>\n    );\n  }\n  export default Inventory;","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/SpecificCar.js",["131","132","133","134","135","136","137"],"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/Orders.js",["138","139"],"import { DataGrid } from '@material-ui/data-grid';\nimport AdminNavBar from './AdminNavBar'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n}));\n\n\nconst columns = [\n  { field: 'id', headerName: 'ID', width: 70 },\n  { field: 'firstName', headerName: 'First name', width: 130 },\n  { field: 'lastName', headerName: 'Last name', width: 130 },\n  {\n    field: 'age',\n    headerName: 'Age',\n    type: 'number',\n    width: 90,\n  },\n  {\n    field: 'fullName',\n    headerName: 'Full name',\n    description: 'This column has a value getter and is not sortable.',\n    sortable: false,\n    width: 160,\n    valueGetter: (params) =>\n      `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\n  },\n];\n\nconst rows = [\n  { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n  { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n  { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n  { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n  { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n  { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n  { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n  { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n  { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n];\n\nexport default function Orders() {\n    const classes = useStyles();\n  return (\n      <div>\n          <AdminNavBar value={3}/>\n          <div style={{ height: 400, marginLeft:\"180px\" }}>\n          <Paper component=\"form\" className={classes.root}>\n          <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n                <SearchIcon />\n            </IconButton>\n            <InputBase\n                className={classes.input}\n                placeholder=\"Search Orders\"\n                inputProps={{ 'aria-label': 'search orders' }}\n            />\n            <IconButton className={classes.iconButton} aria-label=\"menu\">\n                <MenuIcon />\n            </IconButton>\n            </Paper>\n            <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\n          </div>\n      </div>\n\n  );\n}\n",{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":19},{"ruleId":"144","severity":1,"message":"148","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":14},{"ruleId":"144","severity":1,"message":"149","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":15},{"ruleId":"144","severity":1,"message":"150","line":17,"column":8,"nodeType":"146","messageId":"147","endLine":17,"endColumn":19},{"ruleId":"144","severity":1,"message":"151","line":100,"column":9,"nodeType":"146","messageId":"147","endLine":100,"endColumn":19},{"ruleId":"144","severity":1,"message":"152","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":12},{"ruleId":"144","severity":1,"message":"153","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":17},{"ruleId":"144","severity":1,"message":"154","line":6,"column":8,"nodeType":"146","messageId":"147","endLine":6,"endColumn":24},{"ruleId":"144","severity":1,"message":"155","line":7,"column":8,"nodeType":"146","messageId":"147","endLine":7,"endColumn":16},{"ruleId":"156","severity":1,"message":"157","line":27,"column":4,"nodeType":"158","endLine":27,"endColumn":6,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":40,"column":9,"nodeType":"162","endLine":40,"endColumn":70},{"ruleId":"144","severity":1,"message":"163","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":11},{"ruleId":"144","severity":1,"message":"164","line":32,"column":8,"nodeType":"146","messageId":"147","endLine":32,"endColumn":31},{"ruleId":"144","severity":1,"message":"165","line":34,"column":8,"nodeType":"146","messageId":"147","endLine":34,"endColumn":19},{"ruleId":"144","severity":1,"message":"166","line":36,"column":16,"nodeType":"146","messageId":"147","endLine":36,"endColumn":21},{"ruleId":"144","severity":1,"message":"167","line":100,"column":9,"nodeType":"146","messageId":"147","endLine":100,"endColumn":24},{"ruleId":"144","severity":1,"message":"168","line":104,"column":7,"nodeType":"146","messageId":"147","endLine":104,"endColumn":20},{"ruleId":"144","severity":1,"message":"169","line":111,"column":7,"nodeType":"146","messageId":"147","endLine":111,"endColumn":11},{"ruleId":"156","severity":1,"message":"170","line":155,"column":6,"nodeType":"158","endLine":155,"endColumn":42,"suggestions":"171"},{"ruleId":"160","severity":1,"message":"161","line":367,"column":28,"nodeType":"162","endLine":367,"endColumn":194},{"ruleId":"144","severity":1,"message":"172","line":42,"column":10,"nodeType":"146","messageId":"147","endLine":42,"endColumn":17},{"ruleId":"144","severity":1,"message":"173","line":42,"column":19,"nodeType":"146","messageId":"147","endLine":42,"endColumn":29},{"ruleId":"174","severity":1,"message":"175","line":58,"column":80,"nodeType":"176","messageId":"177","endLine":58,"endColumn":82},{"ruleId":"144","severity":1,"message":"178","line":2,"column":3,"nodeType":"146","messageId":"147","endLine":2,"endColumn":11},{"ruleId":"144","severity":1,"message":"179","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":18},{"ruleId":"144","severity":1,"message":"180","line":32,"column":9,"nodeType":"146","messageId":"147","endLine":32,"endColumn":16},{"ruleId":"144","severity":1,"message":"181","line":35,"column":11,"nodeType":"146","messageId":"147","endLine":35,"endColumn":18},{"ruleId":"144","severity":1,"message":"182","line":11,"column":10,"nodeType":"146","messageId":"147","endLine":11,"endColumn":19},{"ruleId":"183","severity":1,"message":"184","line":59,"column":19,"nodeType":"185","messageId":"177","endLine":59,"endColumn":26},{"ruleId":"186","severity":1,"message":"187","line":74,"column":29,"nodeType":"188","messageId":"189","endLine":90,"endColumn":12},{"ruleId":"144","severity":1,"message":"148","line":5,"column":10,"nodeType":"146","messageId":"147","endLine":5,"endColumn":16},{"ruleId":"144","severity":1,"message":"149","line":12,"column":10,"nodeType":"146","messageId":"147","endLine":12,"endColumn":17},{"ruleId":"144","severity":1,"message":"190","line":19,"column":10,"nodeType":"146","messageId":"147","endLine":19,"endColumn":16},{"ruleId":"144","severity":1,"message":"191","line":20,"column":10,"nodeType":"146","messageId":"147","endLine":20,"endColumn":20},{"ruleId":"144","severity":1,"message":"192","line":21,"column":10,"nodeType":"146","messageId":"147","endLine":21,"endColumn":19},{"ruleId":"144","severity":1,"message":"193","line":62,"column":9,"nodeType":"146","messageId":"147","endLine":62,"endColumn":19},{"ruleId":"144","severity":1,"message":"194","line":74,"column":12,"nodeType":"146","messageId":"147","endLine":74,"endColumn":19},{"ruleId":"144","severity":1,"message":"195","line":76,"column":12,"nodeType":"146","messageId":"147","endLine":76,"endColumn":23},{"ruleId":"144","severity":1,"message":"196","line":82,"column":12,"nodeType":"146","messageId":"147","endLine":82,"endColumn":16},{"ruleId":"144","severity":1,"message":"167","line":84,"column":11,"nodeType":"146","messageId":"147","endLine":84,"endColumn":26},{"ruleId":"144","severity":1,"message":"168","line":88,"column":9,"nodeType":"146","messageId":"147","endLine":88,"endColumn":22},{"ruleId":"144","severity":1,"message":"197","line":91,"column":11,"nodeType":"146","messageId":"147","endLine":91,"endColumn":22},{"ruleId":"144","severity":1,"message":"169","line":95,"column":9,"nodeType":"146","messageId":"147","endLine":95,"endColumn":13},{"ruleId":"156","severity":1,"message":"170","line":139,"column":8,"nodeType":"158","endLine":139,"endColumn":44,"suggestions":"198"},{"ruleId":"144","severity":1,"message":"199","line":6,"column":10,"nodeType":"146","messageId":"147","endLine":6,"endColumn":14},{"ruleId":"144","severity":1,"message":"200","line":7,"column":10,"nodeType":"146","messageId":"147","endLine":7,"endColumn":21},{"ruleId":"144","severity":1,"message":"201","line":8,"column":10,"nodeType":"146","messageId":"147","endLine":8,"endColumn":21},{"ruleId":"144","severity":1,"message":"152","line":9,"column":10,"nodeType":"146","messageId":"147","endLine":9,"endColumn":14},{"ruleId":"144","severity":1,"message":"193","line":53,"column":9,"nodeType":"146","messageId":"147","endLine":53,"endColumn":19},{"ruleId":"183","severity":1,"message":"184","line":254,"column":19,"nodeType":"185","messageId":"177","endLine":254,"endColumn":26},{"ruleId":"156","severity":1,"message":"170","line":278,"column":8,"nodeType":"158","endLine":278,"endColumn":34,"suggestions":"202"},{"ruleId":"144","severity":1,"message":"203","line":6,"column":8,"nodeType":"146","messageId":"147","endLine":6,"endColumn":15},{"ruleId":"144","severity":1,"message":"204","line":10,"column":8,"nodeType":"146","messageId":"147","endLine":10,"endColumn":22},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"no-unused-vars","'CssBaseline' is defined but never used.","Identifier","unusedVar","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'queryString' is defined but never used.","'handleBack' is assigned a value but never used.","'Grid' is defined but never used.","'TextField' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getCars'. Either include it or remove the dependency array.","ArrayExpression",["207"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Tab' is defined but never used.","'EmojiTransportationIcon' is defined but never used.","'CommuteIcon' is defined but never used.","'green' is defined but never used.","'handleClickOpen' is assigned a value but never used.","'createListing' is assigned a value but never used.","'pics' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCars'. Either include it or remove the dependency array.",["208"],"'carYear' is assigned a value but never used.","'setCarYear' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","'history' is assigned a value but never used.","'Copyright' is defined but never used.","no-dupe-keys","Duplicate key 'model'.","ObjectExpression","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","ArrowFunctionExpression","unsafeRefs","'Dialog' is defined but never used.","'IconButton' is defined but never used.","'CloseIcon' is defined but never used.","'Transition' is assigned a value but never used.","'listing' is assigned a value but never used.","'carImageNum' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClose' is assigned a value but never used.",["209"],"'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.",["210"],"'Divider' is defined but never used.","'DirectionsIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"213","fix":"215"},{"desc":"216","fix":"217"},"Update the dependencies array to be: [getCars]",{"range":"218","text":"219"},"Update the dependencies array to be: [page, pageLimit, carColor, carYear, getCars]",{"range":"220","text":"221"},{"range":"222","text":"221"},"Update the dependencies array to be: [deleteError, getCars, uploadError]",{"range":"223","text":"224"},[828,830],"[getCars]",[4723,4759],"[page, pageLimit, carColor, carYear, getCars]",[4114,4150],[9032,9058],"[deleteError, getCars, uploadError]"]