[{"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/index.js":"1","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/reportWebVitals.js":"2","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/App.js":"3","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Checkout/Checkout.js":"4","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/SignUp/SignUp.js":"5","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Checkout/PaymentForm.js":"6","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Checkout/AddressForm.js":"7","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/NavBar/NavBar.js":"8","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Checkout/Review.js":"9","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Landing/Landing.js":"10","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/SignIn/SignIn.js":"11","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/Admin.js":"12","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/Dashboard.js":"13","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/AdminNavBar.js":"14","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/AddCar.js":"15","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/DragDrop.js":"16","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/Inventory.js":"17","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/SpecificCar.js":"18","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/Orders.js":"19"},{"size":589,"mtime":1613460836512,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1613287395117,"results":"22","hashOfConfig":"21"},{"size":1304,"mtime":1614438380762,"results":"23","hashOfConfig":"21"},{"size":6628,"mtime":1614490732103,"results":"24","hashOfConfig":"21"},{"size":4156,"mtime":1613287395116,"results":"25","hashOfConfig":"21"},{"size":1572,"mtime":1613287395115,"results":"26","hashOfConfig":"21"},{"size":2678,"mtime":1613287395115,"results":"27","hashOfConfig":"21"},{"size":765,"mtime":1613460830403,"results":"28","hashOfConfig":"21"},{"size":2934,"mtime":1613287395115,"results":"29","hashOfConfig":"21"},{"size":16907,"mtime":1613534077002,"results":"30","hashOfConfig":"21"},{"size":3152,"mtime":1613287395116,"results":"31","hashOfConfig":"21"},{"size":4544,"mtime":1613521176407,"results":"32","hashOfConfig":"21"},{"size":6978,"mtime":1614439780709,"results":"33","hashOfConfig":"21"},{"size":2511,"mtime":1614439723007,"results":"34","hashOfConfig":"21"},{"size":5542,"mtime":1613532125781,"results":"35","hashOfConfig":"21"},{"size":3571,"mtime":1613513276832,"results":"36","hashOfConfig":"21"},{"size":11432,"mtime":1613521040351,"results":"37","hashOfConfig":"21"},{"size":16226,"mtime":1613520920564,"results":"38","hashOfConfig":"21"},{"size":2822,"mtime":1614439926699,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1pipo71",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"42"},"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/index.js",[],["88","89"],"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/reportWebVitals.js",[],"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/App.js",[],"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Checkout/Checkout.js",["90"],"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/SignUp/SignUp.js",[],"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Checkout/PaymentForm.js",[],"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Checkout/AddressForm.js",[],"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/NavBar/NavBar.js",[],"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Checkout/Review.js",[],"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Landing/Landing.js",["91","92","93","94","95"],"import React, {\n  useEffect,\n  useState\n} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport NavBar from '../NavBar/NavBar.js'\nimport { Link } from 'react-router-dom'\nimport Pagination from '@material-ui/lab/Pagination';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n      marginRight: theme.spacing(2),\n  },\n  heroContent: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n      marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n      paddingTop: theme.spacing(8),\n      paddingBottom: theme.spacing(8),\n  },\n  card: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n  },\n  cardMedia: {\n      paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n      flexGrow: 1,\n  },\n  footer: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(6),\n  },\n}));\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction = \"up\"\n  ref = {\n      ref\n  } {\n      ...props\n  }\n  />;\n});\n\nlet Landing = () => {\n  const [cars, setCars] = useState([])\n  const [listing, setListing] = useState(\"\")\n  const [totalPages, setTotalPages] = useState(1)\n  const [carImageNum, setCarImageNum] = useState(1)\n  const [page, setPage] = useState(1)\n  const [resultMessage, setResultMessage] = useState(\"\")\n  const [carYear, setCarYear] = useState(\"\")\n  const [pageLimit, setPageLimit] = useState(10)\n  const [carColor, setCarColor] = useState(\"\")\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = (item) => {\n   setCarImageNum(1)\n   setOpen(true)\n  };\n  var createListing = (item) => {\n\n  }\n  const handleClose = () => {\n      setCarImageNum(1)\n      setOpen(false);\n  };\n  var pics = [\n   {\n       name: \"Random Name #1\",\n       description: \"Probably the most random thing you have ever seen!\"\n   },\n   {\n       name: \"Random Name #2\",\n       description: \"Hello World!\"\n   }\n]\n  var getCars = () => {\n      fetch(`http://localhost:8080/cars/?page=${page}&limit=${pageLimit}&color=${carColor}&year=${carYear}`, {\n              method: 'get',\n              headers: {\n                  'Accept': 'application/json, text/plain, */*',\n                  'Content-Type': 'application/json'\n              }\n          }).then(res => res.json())\n          .then(res => {\n              console.log(res)\n              setResultMessage(res.results)\n              setCars(res.results.data)\n              setListing(cars[0])\n              setTotalPages(res.results.count)\n          })\n          .catch(err => console.log(err))\n\n\n  }\n  \n  const classes = useStyles();\n\n  const pageLimitChange = (event) => {\n      setPageLimit(event.target.value);\n  }\n  const carColorChange = (event) => {\n      setCarColor(event.target.value);\n  }\n  const carYearChange = (event) => {\n      setCarYear(event.target.value);\n  }\n\n  useEffect(() => {\n    getCars()\n  }, [page, pageLimit, carColor, carYear]);\n\n  return (\n<React.Fragment>\n   <NavBar value={0}/>\n   <main>\n      <div className={classes.heroContent}>\n         <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n               WE SELL CARS\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n               You can buy a car from us... wow!\n            </Typography>\n            <div className={classes.heroButtons}>\n               <Grid container spacing={2} justify=\"center\">\n                  <Grid item>\n                     <Button variant=\"contained\" color=\"primary\">\n                     Buy Car\n                     </Button>\n                  </Grid>\n                  <Grid item>\n                     <Button variant=\"outlined\" color=\"primary\">\n                     Sorry, you must buy car\n                     </Button>\n                  </Grid>\n               </Grid>\n            </div>\n         </Container>\n      </div>\n      <div style={{display:\"flex\",justifyContent:\"space-evenly\", alignItems:\"center\"}}>\n      <FormControl variant=\"outlined\" className={classes.formControl} style={{width:\"100px\"}}>\n         <InputLabel id=\"demo-simple-select-outlined-label\">Page Limit</InputLabel>\n         <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            value={pageLimit}\n            onChange={pageLimitChange}\n            label=\"Page Limit\"\n            >\n            <MenuItem value={1}>1</MenuItem>\n            <MenuItem value={10}>10</MenuItem>\n            <MenuItem value={25}>25</MenuItem>\n            <MenuItem value={50}>50</MenuItem>\n            <MenuItem value={75}>75</MenuItem>\n            <MenuItem value={100}>100</MenuItem>\n         </Select>\n      </FormControl>\n      <FormControl variant=\"outlined\" className={classes.formControl} style={{width:\"100px\"}}>\n         <InputLabel id=\"demo-simple-select-outlined-label\">Color</InputLabel>\n         <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            value={carColor}\n            onChange={carColorChange}\n            label=\"Car Color\"\n            >\n            <MenuItem value={\"\"}>Any</MenuItem>\n            <MenuItem value={\"Blue\"}>Blue</MenuItem>\n            <MenuItem value={\"Black\"}>Black</MenuItem>\n            <MenuItem value={\"Red\"}>Red</MenuItem>\n            <MenuItem value={\"Yellow\"}>Yellow</MenuItem>\n            <MenuItem value={\"Green\"}>Green</MenuItem>\n            <MenuItem value={\"Green\"}>Green</MenuItem>\n         </Select>\n      </FormControl>\n      <FormControl variant=\"outlined\" className={classes.formControl} style={{width:\"100px\"}}>\n         <InputLabel id=\"demo-simple-select-outlined-label\">Year</InputLabel>\n         <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            value={carYear}\n            onChange={carYearChange}\n            label=\"Car Year\"\n            >\n            <MenuItem value={\"\"}>Any</MenuItem>\n            <MenuItem value={2020}>2020</MenuItem>\n            <MenuItem value={2019}>2019</MenuItem>\n            <MenuItem value={2018}>2018</MenuItem>\n            <MenuItem value={2017}>2017</MenuItem>\n            <MenuItem value={2016}>2016</MenuItem>\n            <MenuItem value={2015}>2015</MenuItem>\n            <MenuItem value={2014}>2014</MenuItem>\n            <MenuItem value={2013}>2013</MenuItem>\n            <MenuItem value={2012}>2012</MenuItem>\n            <MenuItem value={2011}>2011</MenuItem>\n            <MenuItem value={2010}>2010</MenuItem>\n            <MenuItem value={2009}>2009</MenuItem>\n            <MenuItem value={2008}>2008</MenuItem>\n            <MenuItem value={2007}>2007</MenuItem>\n            <MenuItem value={2006}>2006</MenuItem>\n            <MenuItem value={2005}>2005</MenuItem>\n            <MenuItem value={2004}>2004</MenuItem>\n            <MenuItem value={2003}>2003</MenuItem>\n         </Select>\n      </FormControl>\n      </div>\n      {/* make */}\n      {/* model\n      color\n      year\n      drivetrain\n      transmission\n      fuelType\n      vin */}\n      {\n      resultMessage === undefined?\n      <div>\n         <br></br>\n         <br></br>\n         <Typography gutterBottom variant=\"h5\" component=\"h2\"  style={{display:\"flex\", justifyContent:\"center\"}}>\n         No Matches Found\n         </Typography>\n         <br></br>\n         <br></br>\n      </div>\n      :\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n         {/* End hero unit */}\n         <Grid container spacing={4}>\n            {cars.map((item,index) => (\n            <Grid item key={index} xs={12} sm={6} md={4}>\n               <Card className={classes.card}>\n                  {\n                     item.imgs.length === 0?\n                     <CardMedia\n                     className={classes.cardMedia}\n                     image=\"https://vectorified.com/images/no-image-icon-17.PNG\"\n                     title=\"No Images\"\n                     />\n                     :\n                     <CardMedia\n                     className={classes.cardMedia}\n                     image={item.imgs[0]}\n                     title=\"Image title\"\n                     />\n                     }\n\n\n                  <CardContent className={classes.cardContent}>\n                     <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {item.year} {item.make} {item.model}\n                     </Typography>\n                     <Typography>\n                        Color: {item.color}\n                     </Typography>\n                     <Typography>\n                        description: {item.description}          \n                     </Typography>\n                     <Typography>\n                        drivetrain: {item.drivetrain}\n                     </Typography>\n                     {/* <Typography>\n                        Features: {item.features.map((feature,featureIndex) => \n                        <span key={featureIndex}>\n                        <br></br>\n                        --{feature}\n                        </span>)\n                        }\n                     </Typography> */}\n                     <Typography>\n                        city mpg: {item.mpg.city}\n                     </Typography>\n                     <Typography>\n                        highway mpg: {item.mpg.highway}\n                     </Typography>\n                     <Typography>\n                        price: {item.price.$numberDecimal}\n                     </Typography>\n                     {/* <Typography>\n                        transmission: {item.transmission}\n                     </Typography>\n                     <Typography>\n                        fuelType: {item.fuelType}\n                     </Typography>\n                     <Typography>\n                        engine: {item.engine}\n                     </Typography> */}\n                     <Typography>\n                        {item.sold === false?\"Available\":\"Sold\"}\n                     </Typography>\n                  </CardContent>\n                  <CardActions>\n                     <Button variant=\"outlined\" color=\"primary\" onClick={() =>{setOpen(true); setListing(item)}}>\n                     View\n                     </Button>\n                     {                       \n                     listing === \"\" || listing=== undefined?\n                     <div></div>\n                     :\n                     <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n                        <AppBar className={classes.appBar}>\n                           <Toolbar>\n                              <IconButton edge=\"start\" color=\"inherit\" onClick={() =>\n                                 {setOpen(false);setCarImageNum(1)}} aria-label=\"close\">\n                                 <CloseIcon />\n                              </IconButton>\n                              <Typography variant=\"h6\" className={classes.title}>\n                                 {listing._id}\n                              </Typography>\n                              <Link autoFocus color=\"\" onClick={() =>\n                              {setOpen(false);setCarImageNum(1)}} to={{\n                              pathname: '/checkout',\n                              search: `?id=${listing._id}`,}}>\n                              <Button>                                                                           \n                              Buy\n                              </Button>\n                              </Link>\n                           </Toolbar>\n                        </AppBar>\n                        <Card className={classes.card} style={{display:\"block\",overflow:'auto'}}>\n                           <div style={{margin:\"63px auto\",display:\"flex\",maxWidth:\"75%\",height:\"auto\",justifyContent:\"center\"}}>\n                           <img style={{marginTop:\"63px\",width:\"100%\",height:\"auto\",boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 10%), 0 4px 8px 0 rgb(0 0 0 / 10%)\"}} src={listing.imgs[carImageNum-1]} ></img>\n                           </div>\n                              <div style={{display:\"flex\", justifyContent:\"center\"}}>\n                              <Pagination count={listing.imgs.length} page={carImageNum} onChange={(event,val)=>\n                              {setCarImageNum(val)}\n                              } color=\"primary\" showFirstButton showLastButton/>\n                              </div>\n                           <CardContent className={classes.cardContent}>\n                              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                 {listing.year} {listing.make} {listing.model}\n                              </Typography>\n                              <Typography>\n                                 {listing.sold === false?\"Available\":\"Sold\"}\n                              </Typography>\n                              <Typography>\n                                 Color: {listing.color}\n                              </Typography>\n                              <Typography>\n                                 description: {listing.description}          \n                              </Typography>\n                              <Typography>\n                                 drivetrain: {listing.drivetrain}\n                              </Typography>\n                              <Typography>\n                                 Features: {listing.features.map((feature,featureIndex) => \n                                 <span key={featureIndex}>\n                                 {/* We need a break tag until we add the css to create line breaks */}\n                                 <br></br>\n                                 --{feature}\n                                 </span>)}\n                              </Typography>\n                              <Typography>\n                                 city mpg: {listing.mpg.city}\n                              </Typography>\n                              <Typography>\n                                 highway mpg: {listing.mpg.highway}\n                              </Typography>\n                              <Typography>\n                                 price: {listing.price.$numberDecimal}\n                              </Typography>\n                              <Typography>\n                                 transmission: {listing.transmission}\n                              </Typography>\n                              <Typography>\n                                 fuelType: {listing.fuelType}\n                              </Typography>\n                              <Typography>\n                                 engine: {listing.engine}\n                              </Typography>\n                           </CardContent>\n                        </Card>\n                     </Dialog>\n                     }\n                  </CardActions>\n               </Card>\n            </Grid>\n            ))}\n         </Grid>\n      </Container>\n      }\n      {\n      totalPages === 1?\n      <div style={{display:\"flex\", justifyContent:\"center\"}}>\n      <Pagination count={1} page={page} onChange={(event,val)=>\n      setPage(val)} co  lor=\"primary\" showFirstButton showLastButton/>\n      </div>\n      :\n      <div style={{display:\"flex\", justifyContent:\"center\"}}>\n      <Pagination count={Math.ceil(totalPages/pageLimit)} page={page} onChange={(event,val)=>\n      setPage(val)} color=\"primary\" showFirstButton showLastButton/>\n      </div>\n      }\n   </main>\n   {/* Footer */}\n   <footer className={classes.footer}>\n      <Typography variant=\"h6\" align=\"center\" gutterBottom>\n         Footer\n      </Typography>\n      <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n         Something here to give the footer a purpose!\n      </Typography>\n   </footer>\n   {/* End footer */}\n</React.Fragment>\n  );\n}\nexport default Landing;","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/SignIn/SignIn.js",[],"/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/Admin.js",["96","97","98"],"import React, {\n  useState\n} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport NavBar from '../NavBar/NavBar.js'\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\n\n\nfunction Admin() {\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n  const classes = useStyles();\n  const [errorMessage, setErrorMessage] = useState(\"\")\n  const [carYear, setCarYear] = useState(\"\")\n    const history = useHistory();\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n\n    </Typography>\n  );\n}\n\n\nvar SubmitLogin = (e) => {\n  e.preventDefault()\n  setErrorMessage(\"\")\n  console.log(e.target.email.value)\n  console.log(e.target.password.value)\n  submiter(e.target.email.value, e.target.password.value).then(res=>res.message==\"Success\"?history.push(\"/admin-dash\"):setErrorMessage(\"Login Failed\"))\n  \n\n//   fetch(`http://localhost:8080/cars/admin`, {\n//     method: 'post',\n//     body:\n//       JSON.stringify({\"username\":e.target.email.value,\n//       \"pw\":e.target.password.value}),\n//     headers: {\n//         'Accept': 'application/json, text/plain, */*',\n//         'Content-Type': 'application/json'\n//     },\n//     credentials: 'same-origin'}).then(res => console.log(res))\n// .then(res => console.log(res))\n// .catch(err => console.log(err))\n}\nvar submiter = (username,pw) => {\n  const fetchData = async () => {\n    const result = await fetch(`http://localhost:8080/cars/admin`, {\n      headers: {\n        Accept: 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\"username\":username,\n      \"pw\":pw}),\n      method: \"POST\", credentials: 'same-origin'\n    });\n    let response = await result.json();\n    return response\n  }\n  return fetchData()\n} \n\n  return (\n    <div>\n      <NavBar value={4}/>\n    <Container component=\"main\" maxWidth=\"xs\">\n      \n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} onSubmit={SubmitLogin}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          {/* <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          /> */}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          {/* <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid> */}\n        </form>\n        <Typography variant=\"body2\" color=\"error\" align=\"center\">\n          {errorMessage}\n</Typography>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n    </div>\n  );\n}\n\nexport default Admin;","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/Dashboard.js",["99","100","101","102"],"import React, {\n  useState\n} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport AdminNavBar from './AdminNavBar'\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chart from \"react-apexcharts\";\nimport './styles.css';\n\nfunction Dashboard() {\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n  const classes = useStyles();\n  // const [errorMessage, setErrorMessage] = useState(\"\")\n  // const [carYear, setCarYear] = useState(\"\")\n    const history = useHistory();\n\n\n// var SubmitLogin = (e) => {\n//   e.preventDefault()\n//   setErrorMessage(\"\")\n//   console.log(e.target.email.value)\n//   console.log(e.target.password.value)\n//   submiter(e.target.email.value, e.target.password.value).then(res=>res.message==\"Success\"?history.push(\"/admin-dash\"):setErrorMessage(\"Login Failed\"))\n  \n\n//   fetch(`http://localhost:8080/cars/admin`, {\n//     method: 'post',\n//     body:\n//       JSON.stringify({\"username\":e.target.email.value,\n//       \"pw\":e.target.password.value}),\n//     headers: {\n//         'Accept': 'application/json, text/plain, */*',\n//         'Content-Type': 'application/json'\n//     },\n//     credentials: 'same-origin'}).then(res => console.log(res))\n// .then(res => console.log(res))\n// .catch(err => console.log(err))\n// }\n// var submiter = (username,pw) => {\n//   const fetchData = async () => {\n//     const result = await fetch(`http://localhost:8080/cars/admin`, {\n//       headers: {\n//         Accept: 'application/json, text/plain, */*',\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify({\"username\":username,\n//       \"pw\":pw}),\n//       method: \"POST\", credentials: 'same-origin'\n//     });\n//     let response = await result.json();\n//     return response\n//   }\n//   return fetchData()\n// } \nvar lineData = {\n  series: [{\n    name: \"Session Duration\",\n    data: [45, 52, 38, 24, 33, 26, 21, 20, 6, 8, 15, 10]\n  },\n  {\n    name: \"Page Views\",\n    data: [35, 41, 62, 42, 13, 18, 29, 37, 36, 51, 32, 35]\n  },\n  {\n    name: 'Total Visits',\n    data: [87, 57, 74, 99, 75, 38, 62, 47, 82, 56, 45, 47]\n  }\n],\noptions: {\n  chart: {\n    height: 350,\n    type: 'line',\n    zoom: {\n      enabled: false\n    },\n  },\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    width: [5, 7, 5],\n    curve: 'straight',\n    dashArray: [0, 8, 5]\n  },\n  title: {\n    text: 'Page Statistics',\n    align: 'left'\n  },\n  legend: {\n    tooltipHoverFormatter: function(val, opts) {\n      return val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\n    }\n  },\n  markers: {\n    size: 0,\n    hover: {\n      sizeOffset: 6\n    }\n  },\n  xaxis: {\n    categories: ['01 Jan', '02 Jan', '03 Jan', '04 Jan', '05 Jan', '06 Jan', '07 Jan', '08 Jan', '09 Jan',\n      '10 Jan', '11 Jan', '12 Jan'\n    ],\n  },\n  tooltip: {\n    y: [\n      {\n        title: {\n          formatter: function (val) {\n            return val + \" (mins)\"\n          }\n        }\n      },\n      {\n        title: {\n          formatter: function (val) {\n            return val + \" per session\"\n          }\n        }\n      },\n      {\n        title: {\n          formatter: function (val) {\n            return val;\n          }\n        }\n      }\n    ]\n  },\n  grid: {\n    borderColor: '#f1f1f1',\n  }\n},\n\n\n};\n\nvar barData = {\n  options: {\n    chart: {\n      id: \"basic-bar\"\n    },\n    xaxis: {\n      categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998]\n    }\n  },\n  series: [\n    {\n      name: \"series-1\",\n      data: [30, 40, 45, 50, 49, 60, 70, 91]\n    }\n  ]\n};\n  var pieData = {\n  options: {},\n  series: [44, 55, 41, 17, 15],\n  labels: ['A', 'B', 'C', 'D', 'E']\n}\nfunction generateData(count, yrange) {\n  var i = 0;\n  var series = [];\n  while (i < count) {\n    var x = \"w\" + (i + 1).toString();\n    var y =\n      Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n    series.push({\n      x: x,\n      y: y\n    });\n    i++;\n  }\n  return series;\n}\n\nvar heatMapOptions = {\n  series: [\n    {\n      name: \"Metric1\",\n      data: generateData(18, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: \"Metric2\",\n      data: generateData(18, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: \"Metric3\",\n      data: generateData(18, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: \"Metric4\",\n      data: generateData(18, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: \"Metric5\",\n      data: generateData(18, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: \"Metric6\",\n      data: generateData(18, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: \"Metric7\",\n      data: generateData(18, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: \"Metric8\",\n      data: generateData(18, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: \"Metric9\",\n      data: generateData(18, {\n        min: 0,\n        max: 90\n      })\n    }\n  ],\n  chart: {\n    height: 350,\n    type: \"heatmap\"\n  },\n  plotOptions: {\n     heatmap: {\n       radius: 0\n     }\n  },\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    width: 0\n  },\n  colors: [\"#008FFB\"]\n};\n  return (\n<div>\n   <AdminNavBar value={4}/>\n   \n   <div style={{display:\"flex\",marginLeft: \"180px\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",width:\"80vw\"}}>\n      <CssBaseline />\n        <div style={{display:\"flex\", flexDirection: \"row\", flexWrap: \"wrap\",width:\"100%\",marginTop:\"20px\"}}>\n        <div className=\"charts\">\n        <Chart \n        options={lineData.options} \n        series={lineData.series} \n        type=\"line\" height={350} \n        width={500} \n        />\n        </div>\n        <div className=\"charts\">\n        <Chart\n        options={barData.options}\n        series={barData.series}\n        type=\"bar\"\n        height={350}\n        width={500}\n        />\n        </div>\n        </div>\n        <div style={{display:\"flex\", flexDirection: \"row\", flexWrap: \"wrap\",width:\"100%\",marginBottom:\"20px\"}}>\n        <div className=\"charts\">\n        <Chart \n        options={heatMapOptions.plotOptions} \n        series={heatMapOptions.series} \n        type=\"heatmap\" \n        height={350} \n        width={500}\n        />\n        </div>\n        <div className=\"charts\">\n        <Chart \n        options={pieData.options} \n        series={pieData.series} \n        type=\"donut\" \n        height={350} \n        width={500}\n        />\n        </div>\n        </div>\n   </div>\n   \n</div>\n  );\n}\n\nexport default Dashboard;","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/AdminNavBar.js",["103"],"import React from 'react';\nimport AppBar from '@material-ui/core/AppBar'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/PersonSharp';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {/* {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'} */}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nlet AdminNavBar = (props) => {\n  const classes = useStyles();\n  return (\n      <AppBar position=\"\"         \n      style={{\n        width:\"162px\",\n        height:\"100vh\",\n        position:\"fixed\"\n        }}>\n        <Tabs orientation=\"vertical\" value={props.value}>\n          <div style={{        \n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            margin: \"auto\",\n            height: \"100px\",\n            width: \"100%\"\n            }}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n          </div>\n        <Tab value={0} label='Home'  to='/' component={Link} /> \n        <Tab value={1} label='Inventory'  to='/admin-inventory' component={Link} /> \n        <Tab value={2} label='Add Car'  to='/admin-add' component={Link} /> \n        <Tab value={3} label='Orders'  to='/admin-orders' component={Link} /> \n        <Tab value={4} label='Analytics'  to='/admin-dash' component={Link} /> \n        <Tab value={5} label='Log Out'  to='/admin-portal' component={Link} /> \n        </Tabs>\n      </AppBar>\n  );\n}\nexport default AdminNavBar;","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/AddCar.js",["104"],"import React, {\n    useState\n  } from 'react';\n  import Button from '@material-ui/core/Button';\n  import TextField from '@material-ui/core/TextField';\n  import AdminNavBar from './AdminNavBar'\n  import DragDrop from \"./DragDrop\"\n\n  function AddCar() {\n    const [errorMessage, setErrorMessage] = useState(<p></p>)\n    const [carID, setCarID] = useState(\"\")\n    var submitNewCar = (e) => {\n        e.preventDefault()\n        setErrorMessage(\"\")\n        // console.log(e.target.email.value)\n        \n        console.log()\n        if (\n            isNaN(parseInt(e.target.year.value))===true || \n            isNaN(parseInt(e.target.price.value))===true ||\n            isNaN(parseInt(e.target.mileage.value))===true ||\n            isNaN(parseInt(e.target.city.value))===true ||\n            isNaN(parseInt(e.target.highway.value))===true\n            ){\n             setErrorMessage(<p style={{color:\"red\"}}>Year, Price, Mileage, City MPG and Highway MPG must all be numbers</p>)\n        } else{\n            submiter(e.target)\n            .then(\n                res=> {\n                    console.log(res)\n                    res.message === undefined?\n                    setErrorMessage(<p style={{color:\"green\"}}>Car Added!</p>)\n                    :\n                setErrorMessage(<p style={{color:\"red\"}}>{res.message}</p>)\n                    res._id !== undefined?\n                        setCarID(res._id)\n                    :\n                    setCarID(\"\")\n                }\n)\n        }\n    }\n    \n    var submiter = (submission) => {\n\n            console.log(submission)\n            const fetchData = async () => {\n                const result = await fetch(`http://localhost:8080/cars/add-car`, {\n                  headers: {\n                    Accept: 'application/json, text/plain, */*',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                  \"make\":submission.make.value,\n                  \"model\":submission.model.value,\n                  \"color\":submission.color.value,\n                  \"year\":submission.year.value,\n                  \"price\":submission.price.value,\n                  \"model\":submission.model.value,\n                  \"mileage\":submission.mileage.value,\n                  \"drivetrain\":submission.drivetrain.value,\n                  \"transmission\":submission.transmission.value,\n                  \"engine\":submission.engine.value,\n                  \"fuelType\":submission.fuelType.value,\n                  \"cityMpg\":submission.city.value,\n                  \"highwayMpg\":submission.highway.value,\n                  \"vin\":submission.vin.value,\n                  \"features\":submission.features.value,\n                  \"description\":submission.description.value,\n                    }\n                  ),\n                  method: \"POST\", credentials: 'same-origin'\n                });\n                let response = await result.json();\n                return response\n              }\n              return fetchData()\n        \n    }\n    var uploadComplete = (val) => {\n        console.log(val)\n    }\n    return (\n        <div>\n            <AdminNavBar value={2}/>\n            \n            <form\n            onSubmit={submitNewCar}\n             style={{marginLeft:\"180px\",paddingTop:\"25px\",maxWidth:\"300px\",display:\"flex\",flexDirection:\"column\"}}>\n                \n                <TextField name=\"make\" id=\"standard-basic\" label=\"Make\" />\n                <TextField name=\"model\" id=\"standard-basic\" label=\"Model\" />\n                <TextField name=\"color\" id=\"standard-basic\" label=\"Color\" />\n                <TextField name=\"year\" id=\"standard-basic\" label=\"Year\" />\n                <TextField name=\"price\" id=\"standard-basic\" label=\"Price\" />\n                <TextField name=\"mileage\" id=\"standard-basic\" label=\"Mileage\" />\n                <TextField name=\"drivetrain\" id=\"standard-basic\" label=\"Drivetrain\" />\n                <TextField name=\"transmission\" id=\"standard-basic\" label=\"Transmission\" />\n                <TextField name=\"engine\" id=\"standard-basic\" label=\"Engine\" />\n                <TextField name=\"fuelType\" id=\"standard-basic\" label=\"Fuel Type\" />\n                <TextField name=\"city\" id=\"standard-basic\" label=\"City MPG\" />\n                <TextField name=\"highway\" id=\"standard-basic\" label=\"Highway MPG\" />\n                <TextField name=\"vin\" id=\"standard-basic\" label=\"Vin\" />\n                <TextField\n                name=\"features\"\n                id=\"standard-textarea\"\n                label=\"Car Features\"\n                placeholder=\"Features\"\n                multiline\n                />\n                <TextField\n                name=\"description\"\n                id=\"standard-textarea\"\n                label=\"Car Description\"\n                placeholder=\"Description\"\n                multiline\n                />\n                <br></br>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className=\"\"\n                >\n                    Submit Car\n                </Button>\n                {errorMessage}\n\n            </form>\n            \n            {\n                carID === \"\"?\n                <div></div>\n                :\n                <div style={{marginLeft:\"180px\"}}>\n                    <DragDrop id={carID} sendData={uploadComplete}/>\n                </div>\n                \n            }\n        </div>\n    );\n  }\n  \n  export default AddCar;","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/DragDrop.js",["105"],"import React, { useState } from 'react';\nimport './styles.css';\n\n\nconst DropArea = (props,id) => {\n  const [data, setData] = useState(false);\n  const [imageUpload, setImageUpload] = useState('');\n  const [imageName, setImageName] = useState('');\n  const [imageTask, setImageTask] = useState('');\n  const [imageDone, setImageDone] = useState('');\n  const renderImage = () => {\n    if (imageUpload===''){\n      return(\n        <span className=\"download-arrow\">\n        <svg height = \"50px\" width = \"50px\">\n          <path className=\"download-color\" d=\"M48.4 26.5c-.9 0-1.7.7-1.7 1.7v11.6h-43.3v-11.6c0-.9-.7-1.7-1.7-1.7s-1.7.7-1.7 1.7v13.2c0 .9.7 1.7 1.7 1.7h46.7c.9 0 1.7-.7 1.7-1.7v-13.2c0-1-.7-1.7-1.7-1.7zm-24.5 6.1c.3.3.8.5 1.2.5.4 0 .9-.2 1.2-.5l10-11.6c.7-.7.7-1.7 0-2.4s-1.7-.7-2.4 0l-7.1 8.3v-25.3c0-.9-.7-1.7-1.7-1.7s-1.7.7-1.7 1.7v25.3l-7.1-8.3c-.7-.7-1.7-.7-2.4 0s-.7 1.7 0 2.4l10 11.6z\"></path>\n        </svg>\n      </span>\n\n      )\n\n    }\n    if (imageUpload==='loading'){\n      return(\n        <div id=\"preloader\">\n          <div id=\"loader\"></div>\n        </div>\n      )\n    }\n  }\n  const renderImageInfo = () => {\n    \n    if (imageTask === ''){\n      return \"\"\n    }\n    \n    return(\n      <div>\n        <p>Name: {imageName}</p>\n        <p>{imageDone}</p>\n      </div>\n    )\n  }\n  const onDrop = e => {\n    e.preventDefault();\n    setImageName('')\n    setImageTask('')\n    setImageUpload('loading')\n    let i\n    const sleep = (milliseconds) => {\n      return new Promise(resolve => setTimeout(resolve, milliseconds))\n    }\n    sleep(500).then(() => {\n      console.log(\"waiting\"); \n      \n    })\n    \n    for(i in e.dataTransfer.files){\n      if (typeof(e.dataTransfer.files[i]) === \"object\" ){\n      console.log(e.dataTransfer.files[i])\n\n      // Create an object of formData \n      const formData = new FormData(); \n\n      // Update the formData object \n      formData.append( \n        \"upload_data\", \n        e.dataTransfer.files[i]\n      ); \n      // Details of the uploaded file \n      setImageName((e.dataTransfer.files[i].name)); \n        console.log(id)\n        console.log(\"PROPS \",props.id)\n         const uploadFile = (formData)  => {\n            const fetchData = async () => {\n              const result = await fetch(`http://localhost:8080/cars/upload_photo?id=${props.id}&name=${e.dataTransfer.files[i].name}`, {\n                headers: {\n                  Accept: 'application/json'\n                },body: formData, method: \"POST\", credentials: 'same-origin'\n              });\n              let response = await result.json();\n              setImageTask(response)\n              await sleep(2000)\n              setImageUpload('')\n              setImageDone('Upload Complete')\n              props.sendData(\"upload complete\")\n              return response\n            }\n            return fetchData()\n          }\n          // hard coding dataset_id for now until I get formData to work\n          \n          uploadFile(formData)\n          \n      } else {\n        return \"Choose a dataset\"\n      }\n    }\n  };\n\n  const onDragOver = e => {\n    e.preventDefault();\n  };\n\n  return (\n    <div>\n      <div\n      className=\"drag-container\"\n        onDrop={e => onDrop(e)}\n        onDragOver={e => onDragOver(e)}\n      >\n        {renderImage()}\n\n\n        {/* {data && <img style={dropAreaImageStyle} src={data} />} */}\n      </div>\n      <br />\n      <div className=\"button-wrapper\">\n        {data && <button text=\"Remove\" onClick={() => setData(false)}></button>}\n      </div>\n      {renderImageInfo()}\n    </div>\n  );\n};\n\n\nexport default DropArea;","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/Inventory.js",["106","107","108","109","110","111","112","113","114","115","116","117","118","119"],"import React, {\n    useEffect,\n    useState\n  } from 'react';\n  import AppBar from '@material-ui/core/AppBar';\n  import Button from '@material-ui/core/Button';\n  import Card from '@material-ui/core/Card';\n  import CardActions from '@material-ui/core/CardActions';\n  import CardContent from '@material-ui/core/CardContent';\n  import CardMedia from '@material-ui/core/CardMedia';\n  import Grid from '@material-ui/core/Grid';\n  import Toolbar from '@material-ui/core/Toolbar';\n  import Typography from '@material-ui/core/Typography';\n  import { makeStyles } from '@material-ui/core/styles';\n  import Container from '@material-ui/core/Container';\n  import AdminNavBar from './AdminNavBar'\n  import { Link } from 'react-router-dom'\n  import Pagination from '@material-ui/lab/Pagination';\n  import Dialog from '@material-ui/core/Dialog';\n  import IconButton from '@material-ui/core/IconButton';\n  import CloseIcon from '@material-ui/icons/Close';\n  import Slide from '@material-ui/core/Slide';\n  import InputLabel from '@material-ui/core/InputLabel';\n  import MenuItem from '@material-ui/core/MenuItem';\n  import FormControl from '@material-ui/core/FormControl';\n  import Select from '@material-ui/core/Select';\n  \n  \n  const useStyles = makeStyles((theme) => ({\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6),\n    },\n  }));\n  \n  \n  const Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction = \"up\"\n    ref = {\n        ref\n    } {\n        ...props\n    }\n    />;\n  });\n  \n  let Inventory = () => {\n    const [cars, setCars] = useState([])\n    const [listing, setListing] = useState(\"\")\n    const [totalPages, setTotalPages] = useState(1)\n    const [carImageNum, setCarImageNum] = useState(1)\n    const [page, setPage] = useState(1)\n    const [resultMessage, setResultMessage] = useState(\"\")\n    const [carYear, setCarYear] = useState(\"\")\n    const [pageLimit, setPageLimit] = useState(10)\n    const [carColor, setCarColor] = useState(\"\")\n    const [open, setOpen] = useState(false);\n  \n    const handleClickOpen = (item) => {\n     setCarImageNum(1)\n     setOpen(true)\n    };\n    var createListing = (item) => {\n  \n    }\n    const handleClose = () => {\n        setCarImageNum(1)\n        setOpen(false);\n    };\n    var pics = [\n     {\n         name: \"Random Name #1\",\n         description: \"Probably the most random thing you have ever seen!\"\n     },\n     {\n         name: \"Random Name #2\",\n         description: \"Hello World!\"\n     }\n  ]\n    var getCars = () => {\n        fetch(`http://localhost:8080/cars/?page=${page}&limit=${pageLimit}&color=${carColor}&year=${carYear}`, {\n                method: 'get',\n                headers: {\n                    'Accept': 'application/json, text/plain, */*',\n                    'Content-Type': 'application/json'\n                }\n            }).then(res => res.json())\n            .then(res => {\n                console.log(res)\n                setResultMessage(res.results)\n                setCars(res.results.data)\n                setListing(cars[0])\n                setTotalPages(res.results.count)\n            })\n            .catch(err => console.log(err))\n  \n  \n    }\n    \n    const classes = useStyles();\n  \n    const pageLimitChange = (event) => {\n        setPageLimit(event.target.value);\n    }\n    const carColorChange = (event) => {\n        setCarColor(event.target.value);\n    }\n    const carYearChange = (event) => {\n        setCarYear(event.target.value);\n    }\n  \n    useEffect(() => {\n      getCars()\n    }, [page, pageLimit, carColor, carYear]);\n  \n    return (\n  <React.Fragment>\n     <AdminNavBar value={1}/>\n     <main>\n        <div style={{display:\"flex\",justifyContent:\"space-evenly\", alignItems:\"center\", marginLeft:\"180px\",paddingTop:\"25px\"}}>\n        <FormControl variant=\"outlined\" className={classes.formControl} style={{width:\"100px\"}}>\n           <InputLabel id=\"demo-simple-select-outlined-label\">Page Limit</InputLabel>\n           <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={pageLimit}\n              onChange={pageLimitChange}\n              label=\"Page Limit\"\n              >\n              <MenuItem value={1}>1</MenuItem>\n              <MenuItem value={10}>10</MenuItem>\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={75}>75</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n           </Select>\n        </FormControl>\n        <FormControl variant=\"outlined\" className={classes.formControl} style={{width:\"100px\"}}>\n           <InputLabel id=\"demo-simple-select-outlined-label\">Color</InputLabel>\n           <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={carColor}\n              onChange={carColorChange}\n              label=\"Car Color\"\n              >\n              <MenuItem value={\"\"}>Any</MenuItem>\n              <MenuItem value={\"Blue\"}>Blue</MenuItem>\n              <MenuItem value={\"Black\"}>Black</MenuItem>\n              <MenuItem value={\"Red\"}>Red</MenuItem>\n              <MenuItem value={\"Yellow\"}>Yellow</MenuItem>\n              <MenuItem value={\"Green\"}>Green</MenuItem>\n              <MenuItem value={\"Green\"}>Green</MenuItem>\n           </Select>\n        </FormControl>\n        <FormControl variant=\"outlined\" className={classes.formControl} style={{width:\"100px\"}}>\n           <InputLabel id=\"demo-simple-select-outlined-label\">Year</InputLabel>\n           <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={carYear}\n              onChange={carYearChange}\n              label=\"Car Year\"\n              >\n              <MenuItem value={\"\"}>Any</MenuItem>\n              <MenuItem value={2020}>2020</MenuItem>\n              <MenuItem value={2019}>2019</MenuItem>\n              <MenuItem value={2018}>2018</MenuItem>\n              <MenuItem value={2017}>2017</MenuItem>\n              <MenuItem value={2016}>2016</MenuItem>\n              <MenuItem value={2015}>2015</MenuItem>\n              <MenuItem value={2014}>2014</MenuItem>\n              <MenuItem value={2013}>2013</MenuItem>\n              <MenuItem value={2012}>2012</MenuItem>\n              <MenuItem value={2011}>2011</MenuItem>\n              <MenuItem value={2010}>2010</MenuItem>\n              <MenuItem value={2009}>2009</MenuItem>\n              <MenuItem value={2008}>2008</MenuItem>\n              <MenuItem value={2007}>2007</MenuItem>\n              <MenuItem value={2006}>2006</MenuItem>\n              <MenuItem value={2005}>2005</MenuItem>\n              <MenuItem value={2004}>2004</MenuItem>\n              <MenuItem value={2003}>2003</MenuItem>\n           </Select>\n        </FormControl>\n        </div>\n        {/* make */}\n        {/* model\n        color\n        year\n        drivetrain\n        transmission\n        fuelType\n        vin */}\n        {\n        resultMessage === undefined || cars === undefined?\n        <div>\n           <br></br>\n           <br></br>\n           <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{display:\"flex\", justifyContent:\"center\"}}>\n           No Matches Found\n           </Typography>\n           <br></br>\n           <br></br>\n        </div>\n        :\n        <Container className={classes.cardGrid} maxWidth=\"md\" style={{marginLeft:\"180px\"}}>\n           {/* End hero unit */}\n           <Grid container spacing={4}>\n              {cars.map((item,index) => (\n              <Grid item key={index} xs={12} sm={6} md={4}>\n                 <Card className={classes.card}>\n                    <CardMedia\n                       className={classes.cardMedia}\n                       image={item.imgs[0]}\n                       title=\"Image title\"\n                       />\n                    <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {item.year} {item.make} {item.model}\n                     </Typography>\n                     <Typography>\n                        {item.sold === false?\"Available\":\"Sold\"}\n                     </Typography>\n                     <Typography>\n                        Color: {item.color}\n                     </Typography>\n                     <Typography>\n                        description: {item.description}          \n                     </Typography>\n                     <Typography>\n                        drivetrain: {item.drivetrain}\n                     </Typography>\n                     {/* <Typography>\n                        Features: {item.features.map((feature,featureIndex) => \n                        <span key={featureIndex}>\n                        <br></br>\n                        --{feature}\n                        </span>)\n                        }\n                     </Typography> */}\n                     <Typography>\n                        city mpg: {item.mpg.city}\n                     </Typography>\n                     <Typography>\n                        highway mpg: {item.mpg.highway}\n                     </Typography>\n                     <Typography>\n                        price: {item.price.$numberDecimal}\n                     </Typography>\n                     {/* <Typography>\n                        transmission: {item.transmission}\n                     </Typography>\n                     <Typography>\n                        fuelType: {item.fuelType}\n                     </Typography>\n                     <Typography>\n                        engine: {item.engine}\n                     </Typography> */}\n                    </CardContent>\n                    <CardActions>\n                    <Link autoFocus color=\"\" to={{\n                              pathname: \"/admin-specific-car\",\n                              search: `?id=${item._id}`,}}>\n                       <Button variant=\"outlined\" color=\"primary\" >\n                       View\n                       </Button>\n                       </Link>\n                    </CardActions>\n                 </Card>\n              </Grid>\n              ))}\n           </Grid>\n        </Container>\n        }\n        {\n        totalPages === 1?\n        <div style={{display:\"flex\", justifyContent:\"center\"}}>\n        <Pagination count={1} page={page} onChange={(event,val)=>\n        setPage(val)} co  lor=\"primary\" showFirstButton showLastButton/>\n        </div>\n        :\n        <div style={{display:\"flex\", justifyContent:\"center\"}}>\n        <Pagination count={Math.ceil(totalPages/pageLimit)} page={page} onChange={(event,val)=>\n        setPage(val)} color=\"primary\" showFirstButton showLastButton/>\n        </div>\n        }\n     </main>\n  </React.Fragment>\n    );\n  }\n  export default Inventory;","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/SpecificCar.js",["120","121","122","123","124","125","126"],"import React, {\n    useEffect,\n    useState\n  } from 'react';\n  import Button from '@material-ui/core/Button';\n  import Card from '@material-ui/core/Card';\n  import CardActions from '@material-ui/core/CardActions';\n  import CardContent from '@material-ui/core/CardContent';\n  import Grid from '@material-ui/core/Grid';\n  import Typography from '@material-ui/core/Typography';\n  import { makeStyles } from '@material-ui/core/styles';\n  import Container from '@material-ui/core/Container';\n  import AdminNavBar from './AdminNavBar'\n  import Slide from '@material-ui/core/Slide';\n  import DragDrop from \"./DragDrop\"\n  import TextField from '@material-ui/core/TextField';\n  import { useHistory } from \"react-router-dom\";\n\n  \n  const useStyles = makeStyles((theme) => ({\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6),\n    },\n  }));\n  \n  \n  const Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction = \"up\"\n    ref = {\n        ref\n    } {\n        ...props\n    }\n    />;\n  });\n  \n  let Inventory = () => {\n    let carID = window.location.search.split(\"id=\")[1]\n    const [car, setCar] = useState()\n    const [deleteError, setDeleteError] = useState(\"\")\n    const [uploadError, setUploadError] = useState(\"\")\n    const [errorMessage, setErrorMessage] = useState(<p></p>)\n    const history = useHistory();\n\n    var getCars = () => {\n        fetch(`http://localhost:8080/cars/${carID}`, {\n                method: 'get',\n                headers: {\n                    'Accept': 'application/json, text/plain, */*',\n                    'Content-Type': 'application/json'\n                }\n            }).then(res => res.json())\n            .then(res => {\n                console.log(res)\n                setCar(res)\n                setDeleteError(\"\")\n                setUploadError(\"\")\n            })\n            .catch(err => console.log(err))\n    }\n    \n    const classes = useStyles();\n\n    var deleteCar = (id) => {\n        const fetchData = async () => {\n            const result = await fetch(`http://localhost:8080/cars/delete-car`, {\n              headers: {\n                Accept: 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\"id\":id}),\n              method: \"POST\", credentials: 'same-origin'\n            });\n            let response = await result.json();\n            history.push(\"/admin-inventory\")\n            setDeleteError((response.message))\n            \n            return response\n          }\n          return fetchData()\n          \n    }\n\n    var deleteAllImage = (id) => {\n        const fetchData = async () => {\n            const result = await fetch(`http://localhost:8080/cars/delete-all-photos`, {\n              headers: {\n                Accept: 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\"id\":id}),\n              method: \"POST\", credentials: 'same-origin'\n            });\n            let response = await result.json();\n            setDeleteError((response.message))\n            return response\n          }\n          return fetchData()\n          \n    }\n    var deleteImage = (img) => {\n        const fetchData = async () => {\n            const result = await fetch(`http://localhost:8080/cars/delete-photo`, {\n              headers: {\n                Accept: 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\"photoURL\":img}),\n              method: \"POST\", credentials: 'same-origin'\n            });\n            let response = await result.json();\n            setDeleteError((response.message))\n            \n            return response\n          }\n          \n          return fetchData()\n          \n    }\n\n    var uploadComplete = (val) => {\n        console.log(val)\n        setUploadError(val)\n    }\n\n    var submitNewCar = (e) => {\n        e.preventDefault()\n        setErrorMessage(\"\")\n        // console.log(e.target.email.value)\n        \n        console.log()\n        // if (\n        //     isNaN(parseInt(e.target.year.value))===true || \n        //     isNaN(parseInt(e.target.price.value))===true ||\n        //     isNaN(parseInt(e.target.mileage.value))===true ||\n        //     isNaN(parseInt(e.target.city.value))===true ||\n        //     isNaN(parseInt(e.target.highway.value))===true\n        //     ){\n        //      setErrorMessage(<p style={{color:\"red\"}}>Year, Price, Mileage, City MPG and Highway MPG must all be numbers</p>)\n        // } else{\n            submiter(e.target)\n            // .then(\n            //     res=> {\n            //         console.log(res)\n            //         res.message === undefined?\n            //         setErrorMessage(<p style={{color:\"green\"}}>Car Added!</p>)\n            //         :\n            //     setErrorMessage(<p style={{color:\"red\"}}>{res.message}</p>)\n                    \n            //     }\n// )\n        // }\n    }\n    var submiter = (submission) => {\n            let make = submission.make.value\n            let model = submission.model.value\n            let color = submission.color.value\n            let year = submission.year.value\n            let price = submission.price.value\n            let mileage = submission.mileage.value\n            let drivetrain = submission.drivetrain.value\n            let transmission = submission.transmission.value\n            let engine = submission.engine.value\n            let fuelType = submission.fuelType.value\n            let city = submission.city.value\n            let highway = submission.highway.value\n            let vin = submission.vin.value\n            let features = submission.features.value\n            let description = submission.description.value\n            if (make === \"\"){\n                make= car.make\n            }\n            if (model === \"\"){\n                model = car.model\n            }\n            if (color === \"\"){\n                color = car.color\n            }\n            if (year === \"\"){\n                year = car.year\n            }\n            if (price === \"\"){\n                price = car.price.$numberDecimal\n            }\n            if (mileage === \"\"){\n                mileage = car.mileage\n            }\n            if (drivetrain === \"\"){\n                drivetrain = car.drivetrain\n            }\n            if (transmission === \"\"){\n                transmission = car.transmission\n            }\n            if (engine === \"\"){\n                engine = car.engine\n            }\n            if (fuelType === \"\"){\n                fuelType = car.fuelType\n            }\n            if (city === \"\"){\n                city = car.mpg.city\n            }\n            if (highway === \"\"){\n                highway = car.mpg.highway\n            }\n            if (vin === \"\"){\n                vin = car.vin\n            }\n            if (features === \"\"){\n                features = car.features\n            }\n            if (description === \"\"){\n                description = car.description\n            }\n            const fetchData = async () => {\n                const result = await fetch(`http://localhost:8080/cars/update/${car._id}`, {\n                  headers: {\n                    Accept: 'application/json, text/plain, */*',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                  \"id\":car._id,\n                  \"make\":make,\n                  \"model\":model,\n                  \"color\":color,\n                  \"year\":year,\n                  \"price\":price,\n                  \"model\":model,\n                  \"mileage\":mileage,\n                  \"drivetrain\":drivetrain,\n                  \"transmission\":transmission,\n                  \"engine\":engine,\n                  \"fuelType\":fuelType,\n                  \"cityMpg\":city,\n                  \"highwayMpg\":highway,\n                  \"vin\":vin,\n                  \"features\":features,\n                  \"description\":description,\n                    }\n                  ),\n                  method: \"PUT\", credentials: 'same-origin'\n                });\n                let response = await result;\n                setDeleteError((response.message))\n                return response\n              }\n              return fetchData()\n        \n    }\n    useEffect(() => {\n      getCars()\n    }, [deleteError, uploadError]);\n  \n    return (\n  <React.Fragment>\n     \n     <main>\n     <AdminNavBar value={1}/>\n        {\n        car === undefined?\n        <div>\n           <br></br>\n           <br></br>\n           <Typography gutterBottom variant=\"h5\" component=\"h2\"  style={{display:\"flex\", justifyContent:\"center\"}}>\n           No Matches Found\n           </Typography>\n           <br></br>\n           <br></br>\n        </div>\n        :\n        <Container className={classes.cardGrid} maxWidth=\"md\" style={{marginLeft:\"180px\"}}>\n            <h1>{car._id}</h1>\n            <Button \n                variant=\"contained\"\n               color=\"primary\"\n               style={{width:\"300px\",height:\"auto\",marginBottom:\"15px\"}}\n               onClick={() => deleteCar(car._id)}\n               >\n                   Delete Car\n               </Button>\n               <br></br>\n            {\n                car.imgs.length === 0?\n                <div>No Images</div>\n                :\n                <Button \n                variant=\"contained\"\n               color=\"primary\"\n               style={{width:\"300px\",height:\"auto\"}}\n               onClick={() => deleteAllImage(car._id)}\n               >\n                   Delete All Photos\n               </Button>\n            }\n            {\n                deleteError === \"\"?\n                <div></div>:\n                <div>{deleteError}</div>\n            }\n            <div style={{display:\"flex\",flexDirection:\"row\",marginBottom:\"150px\",alignItems:\"center\",flexWrap:\"wrap\"}}>\n            {\n            car.imgs.map((img,imgIndex) => \n            <div\n            style={{width:\"300px\",height:\"auto\",margin:\"15px\"}}\n             key={imgIndex}>\n            <img \n             style={{width:\"300px\",height:\"auto\",\n             boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 10%), 0 4px 8px 0 rgb(0 0 0 / 10%)\"}}\n            src={img}\n            alt=\"new\"\n            />    \n            <Button \n             variant=\"contained\"\n            color=\"primary\"\n            style={{width:\"300px\",height:\"auto\"}}\n            onClick={() => deleteImage(img)}\n            >\n                Delete\n            </Button>\n            </div>\n\n            )\n            }\n            \n            </div>\n            <DragDrop id={car._id} sendData={uploadComplete}/>\n            <br></br>\n            <div style={{display:\"flex\", flexDirection:\"row\", flexWrap:\"wrap\"}}>\n           <form\n            onSubmit={submitNewCar}\n             style={{paddingTop:\"25px\",maxWidth:\"300px\",display:\"flex\",flexDirection:\"column\"}}>\n                <div style={{display:\"flex\",alignItems:\"baseline\"}}>\n                <span style={{height:\"auto\", paddingRight:\"10px\"}}>Make: </span><TextField name=\"make\" id=\"standard-basic\" label={car.make} />\n                </div>\n                <div style={{display:\"flex\",alignItems:\"baseline\"}}>\n                <span style={{height:\"auto\", paddingRight:\"10px\"}}>Model: </span><TextField name=\"model\" id=\"standard-basic\" label={car.model} />\n                </div>\n                <div style={{display:\"flex\",alignItems:\"baseline\"}}>\n                <span style={{height:\"auto\", paddingRight:\"10px\"}}>Color: </span><TextField name=\"color\" id=\"standard-basic\" label={car.color} />\n                </div>\n                <div style={{display:\"flex\",alignItems:\"baseline\"}}>\n                <span style={{height:\"auto\", paddingRight:\"10px\"}}>Year: </span><TextField name=\"year\" id=\"standard-basic\" label={car.year}  />\n                </div>\n                <div style={{display:\"flex\",alignItems:\"baseline\"}}>\n                <span style={{height:\"auto\", paddingRight:\"10px\"}}>Price: </span><TextField name=\"price\" id=\"standard-basic\" label={car.price.$numberDecimal}  />\n                </div>\n                <div style={{display:\"flex\",alignItems:\"baseline\"}}>\n                <span style={{height:\"auto\", paddingRight:\"10px\"}}>Mileage: </span><TextField name=\"mileage\" id=\"standard-basic\" label={car.mileage}  />\n                </div>\n                <div style={{display:\"flex\",alignItems:\"baseline\"}}>\n                <span style={{height:\"auto\", paddingRight:\"10px\"}}>Drivetrain: </span><TextField name=\"drivetrain\" id=\"standard-basic\" label={car.drivetrain}  />\n                </div>\n                <div style={{display:\"flex\",alignItems:\"baseline\"}}>\n                <span style={{height:\"auto\", paddingRight:\"10px\"}}>Transmission: </span><TextField name=\"transmission\" id=\"standard-basic\" label={car.transmission}  />\n                </div>\n                <div style={{display:\"flex\",alignItems:\"baseline\"}}>\n                <span style={{height:\"auto\", paddingRight:\"10px\"}}>Engine: </span><TextField name=\"engine\" id=\"standard-basic\" label={car.engine}  />\n                </div>\n                <div style={{display:\"flex\",alignItems:\"baseline\"}}>\n                <span style={{height:\"auto\", paddingRight:\"10px\"}}>Fuel Type: </span><TextField name=\"fuelType\" id=\"standard-basic\" label={car.fuelType}  />\n                </div>\n                <div style={{display:\"flex\",alignItems:\"baseline\"}}>\n                <span style={{height:\"auto\", paddingRight:\"10px\"}}>City MPG: </span><TextField name=\"city\" id=\"standard-basic\" label={car.mpg.city} />\n                </div>\n                <div style={{display:\"flex\",alignItems:\"baseline\"}}>\n                <span style={{height:\"auto\", paddingRight:\"10px\"}}>Highway MPG: </span><TextField name=\"highway\" id=\"standard-basic\" label={car.mpg.highway} />\n                </div>\n                <div style={{display:\"flex\",alignItems:\"baseline\"}}>\n                <span style={{height:\"auto\", paddingRight:\"10px\"}}>Vin: </span><TextField name=\"vin\" id=\"standard-basic\" label={car.vin}  />\n                </div>\n                <br></br>\n                <span style={{height:\"auto\", paddingRight:\"10px\"}}>Current Features: <br></br>{car.features.map((feature,featureIndex) => \n                          <span key={featureIndex}>\n                          {/* We need a break tag until we add the css to create line breaks */}\n                          <br></br>\n                          --{feature}\n                          </span>)}</span><TextField\n                name=\"features\"\n                id=\"standard-textarea\"\n                label=\"New Car Features\"\n                placeholder=\"Features\"\n                multiline\n                />\n                <br></br>\n                <span style={{height:\"auto\", paddingRight:\"10px\"}}>Current Description: <br></br>{car.description}</span><TextField\n                name=\"description\"\n                id=\"standard-textarea\"\n                label=\"New Car Description\"\n                placeholder=\"Description\"\n                multiline\n                />\n                <br></br>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className=\"\"\n                >\n                    Submit Car\n                </Button>\n                {errorMessage}\n\n            </form>\n            </div>\n        </Container>\n        }\n     </main>\n  </React.Fragment>\n    );\n  }\n  export default Inventory;","/Users/robertvaccaro/Documents/Documents/projects/websites/car-selling-site/src/components/Admin/Orders.js",["127","128"],"import { DataGrid } from '@material-ui/data-grid';\nimport AdminNavBar from './AdminNavBar'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n}));\n\n\nconst columns = [\n  { field: 'id', headerName: 'ID', width: 70 },\n  { field: 'firstName', headerName: 'First name', width: 130 },\n  { field: 'lastName', headerName: 'Last name', width: 130 },\n  {\n    field: 'age',\n    headerName: 'Age',\n    type: 'number',\n    width: 90,\n  },\n  {\n    field: 'fullName',\n    headerName: 'Full name',\n    description: 'This column has a value getter and is not sortable.',\n    sortable: false,\n    width: 160,\n    valueGetter: (params) =>\n      `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\n  },\n];\n\nconst rows = [\n  { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n  { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n  { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n  { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n  { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n  { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n  { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n  { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n  { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n];\n\nexport default function Orders() {\n    const classes = useStyles();\n  return (\n      <div>\n          <AdminNavBar value={3}/>\n          <div style={{ height: 400, marginLeft:\"180px\" }}>\n          <Paper component=\"form\" className={classes.root}>\n          <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n                <SearchIcon />\n            </IconButton>\n            <InputBase\n                className={classes.input}\n                placeholder=\"Search Orders\"\n                inputProps={{ 'aria-label': 'search orders' }}\n            />\n            <IconButton className={classes.iconButton} aria-label=\"menu\">\n                <MenuIcon />\n            </IconButton>\n            </Paper>\n            <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\n          </div>\n      </div>\n\n  );\n}\n",{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":17,"column":8,"nodeType":"135","messageId":"136","endLine":17,"endColumn":19},{"ruleId":"133","severity":1,"message":"137","line":84,"column":9,"nodeType":"135","messageId":"136","endLine":84,"endColumn":24},{"ruleId":"133","severity":1,"message":"138","line":88,"column":7,"nodeType":"135","messageId":"136","endLine":88,"endColumn":20},{"ruleId":"133","severity":1,"message":"139","line":95,"column":7,"nodeType":"135","messageId":"136","endLine":95,"endColumn":11},{"ruleId":"140","severity":1,"message":"141","line":139,"column":6,"nodeType":"142","endLine":139,"endColumn":42,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":351,"column":28,"nodeType":"146","endLine":351,"endColumn":194},{"ruleId":"133","severity":1,"message":"147","line":42,"column":10,"nodeType":"135","messageId":"136","endLine":42,"endColumn":17},{"ruleId":"133","severity":1,"message":"148","line":42,"column":19,"nodeType":"135","messageId":"136","endLine":42,"endColumn":29},{"ruleId":"149","severity":1,"message":"150","line":58,"column":80,"nodeType":"151","messageId":"152","endLine":58,"endColumn":82},{"ruleId":"133","severity":1,"message":"153","line":2,"column":3,"nodeType":"135","messageId":"136","endLine":2,"endColumn":11},{"ruleId":"133","severity":1,"message":"154","line":5,"column":8,"nodeType":"135","messageId":"136","endLine":5,"endColumn":18},{"ruleId":"133","severity":1,"message":"155","line":32,"column":9,"nodeType":"135","messageId":"136","endLine":32,"endColumn":16},{"ruleId":"133","severity":1,"message":"156","line":35,"column":11,"nodeType":"135","messageId":"136","endLine":35,"endColumn":18},{"ruleId":"133","severity":1,"message":"157","line":11,"column":10,"nodeType":"135","messageId":"136","endLine":11,"endColumn":19},{"ruleId":"158","severity":1,"message":"159","line":59,"column":19,"nodeType":"160","messageId":"152","endLine":59,"endColumn":26},{"ruleId":"161","severity":1,"message":"162","line":74,"column":29,"nodeType":"163","messageId":"164","endLine":90,"endColumn":12},{"ruleId":"133","severity":1,"message":"165","line":5,"column":10,"nodeType":"135","messageId":"136","endLine":5,"endColumn":16},{"ruleId":"133","severity":1,"message":"166","line":12,"column":10,"nodeType":"135","messageId":"136","endLine":12,"endColumn":17},{"ruleId":"133","severity":1,"message":"167","line":19,"column":10,"nodeType":"135","messageId":"136","endLine":19,"endColumn":16},{"ruleId":"133","severity":1,"message":"168","line":20,"column":10,"nodeType":"135","messageId":"136","endLine":20,"endColumn":20},{"ruleId":"133","severity":1,"message":"169","line":21,"column":10,"nodeType":"135","messageId":"136","endLine":21,"endColumn":19},{"ruleId":"133","severity":1,"message":"170","line":62,"column":9,"nodeType":"135","messageId":"136","endLine":62,"endColumn":19},{"ruleId":"133","severity":1,"message":"171","line":74,"column":12,"nodeType":"135","messageId":"136","endLine":74,"endColumn":19},{"ruleId":"133","severity":1,"message":"172","line":76,"column":12,"nodeType":"135","messageId":"136","endLine":76,"endColumn":23},{"ruleId":"133","severity":1,"message":"173","line":82,"column":12,"nodeType":"135","messageId":"136","endLine":82,"endColumn":16},{"ruleId":"133","severity":1,"message":"137","line":84,"column":11,"nodeType":"135","messageId":"136","endLine":84,"endColumn":26},{"ruleId":"133","severity":1,"message":"138","line":88,"column":9,"nodeType":"135","messageId":"136","endLine":88,"endColumn":22},{"ruleId":"133","severity":1,"message":"174","line":91,"column":11,"nodeType":"135","messageId":"136","endLine":91,"endColumn":22},{"ruleId":"133","severity":1,"message":"139","line":95,"column":9,"nodeType":"135","messageId":"136","endLine":95,"endColumn":13},{"ruleId":"140","severity":1,"message":"141","line":139,"column":8,"nodeType":"142","endLine":139,"endColumn":44,"suggestions":"175"},{"ruleId":"133","severity":1,"message":"176","line":6,"column":10,"nodeType":"135","messageId":"136","endLine":6,"endColumn":14},{"ruleId":"133","severity":1,"message":"177","line":7,"column":10,"nodeType":"135","messageId":"136","endLine":7,"endColumn":21},{"ruleId":"133","severity":1,"message":"178","line":8,"column":10,"nodeType":"135","messageId":"136","endLine":8,"endColumn":21},{"ruleId":"133","severity":1,"message":"179","line":9,"column":10,"nodeType":"135","messageId":"136","endLine":9,"endColumn":14},{"ruleId":"133","severity":1,"message":"170","line":53,"column":9,"nodeType":"135","messageId":"136","endLine":53,"endColumn":19},{"ruleId":"158","severity":1,"message":"159","line":254,"column":19,"nodeType":"160","messageId":"152","endLine":254,"endColumn":26},{"ruleId":"140","severity":1,"message":"141","line":278,"column":8,"nodeType":"142","endLine":278,"endColumn":34,"suggestions":"180"},{"ruleId":"133","severity":1,"message":"181","line":6,"column":8,"nodeType":"135","messageId":"136","endLine":6,"endColumn":15},{"ruleId":"133","severity":1,"message":"182","line":10,"column":8,"nodeType":"135","messageId":"136","endLine":10,"endColumn":22},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'queryString' is defined but never used.","Identifier","unusedVar","'handleClickOpen' is assigned a value but never used.","'createListing' is assigned a value but never used.","'pics' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCars'. Either include it or remove the dependency array.","ArrayExpression",["185"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'carYear' is assigned a value but never used.","'setCarYear' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","'history' is assigned a value but never used.","'Copyright' is defined but never used.","no-dupe-keys","Duplicate key 'model'.","ObjectExpression","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","ArrowFunctionExpression","unsafeRefs","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Dialog' is defined but never used.","'IconButton' is defined but never used.","'CloseIcon' is defined but never used.","'Transition' is assigned a value but never used.","'listing' is assigned a value but never used.","'carImageNum' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClose' is assigned a value but never used.",["186"],"'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'Grid' is defined but never used.",["187"],"'Divider' is defined but never used.","'DirectionsIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"188","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [page, pageLimit, carColor, carYear, getCars]",{"range":"193","text":"194"},{"range":"195","text":"194"},"Update the dependencies array to be: [deleteError, getCars, uploadError]",{"range":"196","text":"197"},[3837,3873],"[page, pageLimit, carColor, carYear, getCars]",[4114,4150],[9031,9057],"[deleteError, getCars, uploadError]"]